#!/usr/bin/env bash

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]
then
	set -Eeuo pipefail
fi

function usage {
  cat <<EOF # remove the space between << and EOF, this is due to web plugin issue
Usage: $(basename "${BASH_SOURCE[0]}") [import|list|view|edit] [options] file1 file2 ...

Track transactions and generate reports on spending

Available options:

-h, --help      					Print this help and exit
EOF
  exit
}

function msg {
  echo >&2 -e "${@}"
}

function die {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

function parse_ini {
	 local file="${1?Must provide a path to an INI config file}"
	 declare -gA INI_CONFIG=()
	 export INI_CONFIG
	 local line_num=0
	 local line key value

	 while IFS= read -r line || [[ -n $line ]]; do
		line_num=$((line_num + 1))
		msg "Line: ${line}"
		line="${line#"${line%%[![:space:]]*}"}"  # ltrim
		# line="${line%"${line##*[![:space:]]}"}"  # rtrim

		# Skip comments
		if [[ "${line}" =~ ^[[:space:]]*[#\;] ]] || [[ "${line}" =~ ^[[:space:]]*$ ]] ; then
		  continue
		fi

		# Parse key=value lines
		if [[ "${line}" =~ ^([^[:space:]=]+)=(.*)$ ]]; then
		  key="${BASH_REMATCH[1]}"
		  value="${BASH_REMATCH[2]}"
		  INI_CONFIG["${key}"]="${value}"
		  continue
		fi

	   # Everything else is invalid
	   msg "parse_ini: Invalid line ${line_num} in ${file}: ${line}"
	   return 1
	 done < "${file}"
	# array support
	# IFS=',' read -r -a TAGS <<< "${INI_CONFIG["tags"]}"
}


function parse_args {
	POSITIONAL_ARGUMENTS=()
	while [[ $# -gt 0 ]]; do
		# msg "ARG: ${1-}"
	    case "${1-}" in
		    -h | --help) usage ;;
		    -?*) die "Unknown option: $1" ;;
		    *) POSITIONAL_ARGUMENTS+=( "${1-}" ) ;;
	    esac
	    shift
  	done
  	if [[ ${#POSITIONAL_ARGUMENTS[@]} -lt 1 ]]
  	then
		die "Must provide more arguments. See usage with --help"
  	fi
}


function main {
	echo 'Done'
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]
then
	parse_args "${@}"
	main
fi
